# Generated by Django 4.0.2 on 2022-03-25 15:52

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('phone_number', models.CharField(blank=True, max_length=14, validators=[django.core.validators.RegexValidator(message='Phone Number must be entered in the correct format', regex='^(\\+?234|0)(81|80|70|90|91)\\d{8}$')])),
                ('account_number', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(message='Enter a valid account Number', regex='^\\d{10}$')])),
                ('address', models.TextField(blank=True)),
                ('address_state', models.CharField(default='Osun', max_length=100)),
                ('address_poster_code', models.IntegerField(default=22222)),
            ],
            options={
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('regular_price', models.DecimalField(decimal_places=2, error_messages={'name': {'max_length': 'The price must be between 0 and 99999.99.'}}, help_text='Maximum 99999.99', max_digits=7)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('discount_price', models.DecimalField(decimal_places=2, error_messages={'name': {'max_length': 'The price must be between 0 and 99999.99.'}}, help_text='Maximum 99999.99', max_digits=7)),
                ('category', models.ManyToManyField(to='foodie1.Category')),
            ],
        ),
        migrations.CreateModel(
            name='Meat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('regular_price', models.DecimalField(decimal_places=2, error_messages={'name': {'max_length': 'The price must be between 0 and 99999.99.'}}, help_text='Maximum 99999.99', max_digits=7)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('amount_available', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_comments', models.TextField(blank=True)),
                ('customer', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='foodie1.customer')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=2, help_text='Price of all the quantities in naira', max_digits=7)),
                ('food', models.ManyToManyField(to='foodie1.Food')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foodie1.order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderStatusCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_code', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Shipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_address', models.TextField(blank=True)),
                ('from_address', models.TextField(blank=True)),
                ('tracking_no', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(regex='^\\d{20}')])),
                ('sent_at', models.DateTimeField(auto_now=True)),
                ('order', models.ManyToManyField(to='foodie1.Order')),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('phone_number', models.CharField(blank=True, max_length=14, validators=[django.core.validators.RegexValidator(message='Phone Number must be entered in the correct format', regex='^(\\+?234|0)(81|80|70|90|91)\\d{8}$')])),
                ('account_number', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(message='Enter a valid account Number', regex='^\\d{10}$')])),
                ('address', models.TextField(blank=True)),
                ('address_state', models.CharField(default='Osun', max_length=100)),
                ('address_poster_code', models.IntegerField(default=22222)),
            ],
            options={
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='VendorLogin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foodie1.vendor')),
            ],
        ),
        migrations.CreateModel(
            name='ShipmentItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_item_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='foodie1.orderitem')),
                ('shipment_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='foodie1.shipment')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='status_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foodie1.orderstatuscode'),
        ),
        migrations.CreateModel(
            name='MeatImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_feature', models.BooleanField(default=False)),
                ('alt_text', models.CharField(blank=True, max_length=100)),
                ('image_height', models.CharField(blank=True, editable=False, max_length=4)),
                ('image_width', models.CharField(blank=True, editable=False, max_length=4)),
                ('meat_images', models.ImageField(height_field='image_height', upload_to='products/meats/%Y_%m_%d/', width_field='image_width')),
                ('meat', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='foodie1.meat')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='meat',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foodie1.vendor'),
        ),
        migrations.CreateModel(
            name='FoodImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_feature', models.BooleanField(default=False)),
                ('alt_text', models.CharField(blank=True, max_length=100)),
                ('image_height', models.CharField(blank=True, editable=False, max_length=4)),
                ('image_width', models.CharField(blank=True, editable=False, max_length=4)),
                ('food_images', models.ImageField(height_field='image_height', upload_to='products/foods/%Y_%m_%d/', width_field='image_width')),
                ('food', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='foodie1.food')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='food',
            name='meats',
            field=models.ManyToManyField(blank=True, to='foodie1.Meat'),
        ),
        migrations.AddField(
            model_name='food',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foodie1.vendor'),
        ),
        migrations.CreateModel(
            name='CustomerLogin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foodie1.customer')),
            ],
        ),
        migrations.AddField(
            model_name='category',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foodie1.vendor'),
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=2, help_text='Price of the all the quantities in naira', max_digits=7)),
                ('cart', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='foodie1.cart')),
                ('food', models.ManyToManyField(to='foodie1.Food')),
            ],
        ),
        migrations.AddField(
            model_name='cart',
            name='user',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='foodie1.customer'),
        ),
        migrations.AddConstraint(
            model_name='food',
            constraint=models.UniqueConstraint(fields=('name', 'vendor'), name='unique product_name_and_vendor'),
        ),
    ]
